const { buildSchema } = require('graphql')

module.exports = buildSchema(`
  type Installation {
    _id: ID!
    name: String!
    description: String!
    lockedDescription: String!
    geolocation: [Float]!
    hashTags: [String!]
    testimony: String
    relatedPetition: Petition
  }

  type Petition {
    _id: ID!
    subscribers:[String!]
    relatedInstallation: Installation
  }
  
  input InstallationInput {
    name: String!
    description: String!
    lockedDescription: String!
    geolocation: [Float]!
    hashTags: [String!]
    testimony: String
    relatedPetition: ID
  }

  input UpdateInstallationInput {
    _id: ID!
    name: String
    description: String
    lockedDescription: String
    geolocation: [Float]
    hashTags: [String!]
    testimony: String
    relatedPetition: ID
  }

  input PetitionInput {
    subscribers: [String!]
    relatedInstallation: ID
  }

  type RootQuery {
    installationList: [Installation!]!
    singleInstallation(installationId: ID!): Installation!
    petitionList: [Petition!]!
  }

  type RootMutation {
    createInstallation(installationInput: InstallationInput): Installation
    updateInstallation(updateInstallationInput: UpdateInstallationInput): Installation
    deleteInstallation(installationId: ID!): Installation!
    createPetition(petitionInput: PetitionInput): Petition
    deletePetition(petitionId: ID!): Petition!
  }

  schema {
    query: RootQuery
    mutation: RootMutation
  }
`)