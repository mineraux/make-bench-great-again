const { buildSchema } = require('graphql')

module.exports = buildSchema(`
  type Bench {
    _id: ID!
    name: String!
    description: String!
    lockedDescription: String!
    geolocation: [Float]!
    hashTags: [String!]
    testimony: String
    relatedPetition: Petition
  }

  type Petition {
    _id: ID!
    subscribers:[String!]
    relatedBench: Bench
  }
  
  input BenchInput {
    name: String!
    description: String!
    lockedDescription: String!
    geolocation: [Float]!
    hashTags: [String!]
    testimony: String
    relatedPetition: ID
  }

  input UpdateBenchInput {
    _id: ID!
    name: String
    description: String
    lockedDescription: String
    geolocation: [Float]
    hashTags: [String!]
    testimony: String
    relatedPetition: ID
  }

  input PetitionInput {
    subscribers: [String!]
    relatedBench: ID
  }

  type RootQuery {
    benchList: [Bench!]!
    singleBench(benchId: ID!): Bench!
    petitionList: [Petition!]!
  }

  type RootMutation {
    createBench(benchInput: BenchInput): Bench
    updateBench(updateBenchInput: UpdateBenchInput): Bench
    deleteBench(benchId: ID!): Bench!
    createPetition(petitionInput: PetitionInput): Petition
    deletePetition(petitionId: ID!): Petition!
  }

  schema {
    query: RootQuery
    mutation: RootMutation
  }
`)